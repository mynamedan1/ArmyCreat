<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="army.db.dao.PayRecordMapper" >
  <resultMap id="BaseResultMap" type="army.db.pojo.PayRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="certificateNumber" property="certificatenumber" jdbcType="VARCHAR" />
    <result column="money" property="money" jdbcType="REAL" />
    <result column="time" property="time" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="extra" property="extra" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, certificateNumber, money, time, type, extra
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from payRecord
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from payRecord
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="army.db.pojo.PayRecord" >
    insert into payRecord (id, certificateNumber, money, 
      time, type, extra)
    values (#{id,jdbcType=INTEGER}, #{certificatenumber,jdbcType=VARCHAR}, #{money,jdbcType=REAL}, 
      #{time,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{extra,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="army.db.pojo.PayRecord" >
    insert into payRecord
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="certificatenumber != null" >
        certificateNumber,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="extra != null" >
        extra,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="certificatenumber != null" >
        #{certificatenumber,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        #{money,jdbcType=REAL},
      </if>
      <if test="time != null" >
        #{time,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="extra != null" >
        #{extra,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="army.db.pojo.PayRecord" >
    update payRecord
    <set >
      <if test="certificatenumber != null" >
        certificateNumber = #{certificatenumber,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=REAL},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="extra != null" >
        extra = #{extra,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="army.db.pojo.PayRecord" >
    update payRecord
    set certificateNumber = #{certificatenumber,jdbcType=VARCHAR},
      money = #{money,jdbcType=REAL},
      time = #{time,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      extra = #{extra,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>