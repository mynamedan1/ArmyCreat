<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="army.db.dao.TaskMapper">
	<resultMap id="BaseResultMap" type="army.db.pojo.Task">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="money" property="money" jdbcType="INTEGER" />
		<result column="point" property="point" jdbcType="INTEGER" />
		<result column="title" property="title" jdbcType="VARCHAR" />
		<result column="state" property="state" jdbcType="INTEGER" />
		<result column="releaseby" property="releaseby" jdbcType="INTEGER" />
		<result column="claim" property="claim" jdbcType="INTEGER" />
		<result column="imgUrl" property="imgurl" jdbcType="VARCHAR" />
		<result column="extra" property="extra" jdbcType="VARCHAR" />
		<result column="updateTime" property="updatetime" jdbcType="VARCHAR" />
		<result column="version" property="version" jdbcType="INTEGER" />
		<result column="level" property="level" jdbcType="INTEGER" />
		<result column="changecount" property="changecount" jdbcType="INTEGER" />
	</resultMap>
	<resultMap id="ResultMapWithBLOBs" type="army.db.pojo.Task"
		extends="BaseResultMap">
		<result column="content" property="content" jdbcType="LONGVARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, money, point, title, state, releaseby, claim, imgUrl,
		extra,
		updateTime, version,
		level,changecount
	</sql>
	<sql id="Blob_Column_List">
		content
	</sql>
	<select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from task
		where id = #{id,jdbcType=INTEGER}
	</select>

	<select id="getAllTask" resultMap="ResultMapWithBLOBs">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from task
		<if test="state!=null">
			where state = #{state,jdbcType=INTEGER}
			and level =
			#{level,jdbcType=INTEGER}
		</if>
	</select>


	<select id="getTaskByCondition" resultMap="ResultMapWithBLOBs">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from task
		where title like CONCAT ('%',#{task.title},'%')
		and content
		like CONCAT ('%',#{task.content},'%')
		<if test="task.updatetime!=''">
			and updateTime=#{task.updatetime}
		</if>
		<if test="task.state!=null">
			and state=#{task.state}
		</if>
		<if test="task.level!=null">
			and level=#{task.level}
		</if>
	</select>


	<select id="getUserTaskByState" resultMap="ResultMapWithBLOBs">
		<!-- select <include refid="Base_Column_List" /> , <include refid="Blob_Column_List" 
			/> from task where id in( select taskID from userTask where userID=#{userId,jdbcType=INTEGER} 
			<if test="state!=-3"> and state=#{state,jdbcType=INTEGER} </if> ) -->
		select ut.id as
		id,t.money,t.point,t.title,t.content,t.state,t.releaseby,t.claim,t.imgUrl,t.extra,t.updateTime,t.version,t.`level`,t.changecount
		from userTask ut,task t
		where ut.taskID = t.id
		and
		ut.userID=#{userId,jdbcType=INTEGER}
		<if test="state!=-3">
			and ut.state=#{state,jdbcType=INTEGER}
		</if>

	</select>


	<select id="getReleaseTask" resultMap="ResultMapWithBLOBs">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from task
		where releaseby = #{userId,jdbcType=INTEGER}
		<if test="state==0">
			and state = #{state,jdbcType=INTEGER}
		</if>
	</select>

	<select id="getReleaseTaskByState" resultType="army.db.pojo.ReleaseTaskModel">
		select ut.state as
		utstatte,ut.payImageUrl,ut.id
		,t.money,t.point,t.title,t.content,t.state,t.releaseby,t.claim,t.imgUrl,t.extra,t.updateTime,t.version,t.`level`,t.changecount,u.name
		as claimName,u.id as claimId
		from userTask ut,user u,(select
		* from task where
		releaseby=#{userId,jdbcType=INTEGER}) t
		where ut.state =
		#{state,jdbcType=INTEGER}
		and ut.userID = u.id
		and ut.taskid = t.`id`

		<!-- select ut.state as utstatte,ut.payImageUrl,ut.id as id,t.money,t.point,t.title,t.content,t.state,t.releaseby,t.claim,t.imgUrl,t.extra,t.updateTime,t.version,t.`level`,u.name 
			as claimName from userTask ut,task t,user u where ut.state = #{state,jdbcType=INTEGER} 
			and ut.userID = u.id and ut.taskID in(select id from task where releaseby=#{userId,jdbcType=INTEGER}) -->
	</select>

	<select id="getOrderByCondition" resultType="army.db.pojo.OrderModel">
		select t.*,u.name
		name,u.`certificateNumber`,u.IDCard,u1.name
		releaseuaer,u.phoneNumber
		from userTask ut,task t,user u,user u1
		where
		ut.`taskID` = t.id and ut.`userID` = u.`id` and u1.id = t.`releaseby`
		<if test="orderModel.releaseuaer!=''">
			and u1.name like CONCAT
			('%',#{orderModel.releaseuaer},'%')
		</if>
		<if test="orderModel.name!=''">
			and u.name like CONCAT ('%',#{orderModel.name},'%')
		</if>
		<if test="orderModel.title!=''">
			and t.title like CONCAT ('%',#{orderModel.title},'%')
		</if>
		<if test="orderModel.level!=null">
			and t.level=#{orderModel.level}
		</if>
		<if test="orderModel.updatetime!=''">
			and t.updatetime=#{orderModel.updatetime}
		</if>

	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from task
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="army.db.pojo.Task">
		insert into task (id, money,
		point,
		title, state, releaseby,
		claim, imgUrl, extra,
		updateTime,
		version, level,
		content,changecount)
		values (#{id,jdbcType=INTEGER},
		#{money,jdbcType=INTEGER},
		#{point,jdbcType=INTEGER},
		#{title,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER},
		#{releaseby,jdbcType=INTEGER},
		#{claim,jdbcType=INTEGER},
		#{imgurl,jdbcType=VARCHAR},
		#{extra,jdbcType=VARCHAR},
		#{updatetime,jdbcType=VARCHAR}, #{version,jdbcType=INTEGER},
		#{level,jdbcType=INTEGER},
		#{content,jdbcType=LONGVARCHAR},
		#{changecount,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="army.db.pojo.Task">
		insert into task
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="money != null">
				money,
			</if>
			<if test="point != null">
				point,
			</if>
			<if test="title != null">
				title,
			</if>
			<if test="state != null">
				state,
			</if>
			<if test="releaseby != null">
				releaseby,
			</if>
			<if test="claim != null">
				claim,
			</if>
			<if test="imgurl != null">
				imgUrl,
			</if>
			<if test="extra != null">
				extra,
			</if>
			<if test="updatetime != null">
				updateTime,
			</if>
			<if test="version != null">
				version,
			</if>
			<if test="level != null">
				level,
			</if>
			<if test="content != null">
				content,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="money != null">
				#{money,jdbcType=INTEGER},
			</if>
			<if test="point != null">
				#{point,jdbcType=INTEGER},
			</if>
			<if test="title != null">
				#{title,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				#{state,jdbcType=INTEGER},
			</if>
			<if test="releaseby != null">
				#{releaseby,jdbcType=INTEGER},
			</if>
			<if test="claim != null">
				#{claim,jdbcType=INTEGER},
			</if>
			<if test="imgurl != null">
				#{imgurl,jdbcType=VARCHAR},
			</if>
			<if test="extra != null">
				#{extra,jdbcType=VARCHAR},
			</if>
			<if test="updatetime != null">
				#{updatetime,jdbcType=VARCHAR},
			</if>
			<if test="version != null">
				#{version,jdbcType=INTEGER},
			</if>
			<if test="level != null">
				#{level,jdbcType=INTEGER},
			</if>
			<if test="content != null">
				#{content,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="army.db.pojo.Task">
		update task
		<set>
			<if test="money != null">
				money = #{money,jdbcType=INTEGER},
			</if>
			<if test="point != null">
				point = #{point,jdbcType=INTEGER},
			</if>
			<if test="title != null">
				title = #{title,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=INTEGER},
			</if>
			<if test="releaseby != null">
				releaseby = #{releaseby,jdbcType=INTEGER},
			</if>
			<if test="claim != null">
				claim = #{claim,jdbcType=INTEGER},
			</if>
			<if test="imgurl != null">
				imgUrl = #{imgurl,jdbcType=VARCHAR},
			</if>
			<if test="extra != null">
				extra = #{extra,jdbcType=VARCHAR},
			</if>
			<if test="updatetime != null">
				updateTime = #{updatetime,jdbcType=VARCHAR},
			</if>
			<if test="version != null">
				version = #{version,jdbcType=INTEGER},
			</if>
			<if test="level != null">
				level = #{level,jdbcType=INTEGER},
			</if>
			<if test="content != null">
				content = #{content,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="army.db.pojo.Task">
		update
		task
		set money = #{money,jdbcType=INTEGER},
		point =
		#{point,jdbcType=INTEGER},
		title = #{title,jdbcType=VARCHAR},
		state =
		#{state,jdbcType=INTEGER},
		releaseby = #{releaseby,jdbcType=INTEGER},
		claim = #{claim,jdbcType=INTEGER},
		imgUrl = #{imgurl,jdbcType=VARCHAR},
		extra = #{extra,jdbcType=VARCHAR},
		updateTime =
		#{updatetime,jdbcType=VARCHAR},
		version = #{version,jdbcType=INTEGER},
		level = #{level,jdbcType=INTEGER},
		content =
		#{content,jdbcType=LONGVARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="army.db.pojo.Task">
		update task
		set
		money = #{money,jdbcType=INTEGER},
		point = #{point,jdbcType=INTEGER},
		title = #{title,jdbcType=VARCHAR},
		state = #{state,jdbcType=INTEGER},
		releaseby = #{releaseby,jdbcType=INTEGER},
		claim =
		#{claim,jdbcType=INTEGER},
		imgUrl = #{imgurl,jdbcType=VARCHAR},
		extra =
		#{extra,jdbcType=VARCHAR},
		updateTime = #{updatetime,jdbcType=VARCHAR},
		version = #{version,jdbcType=INTEGER},
		level =
		#{level,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>