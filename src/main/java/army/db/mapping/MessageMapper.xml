<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="army.db.dao.MessageMapper">
	<resultMap id="BaseResultMap" type="army.db.pojo.Message">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="content" property="content" jdbcType="VARCHAR" />
		<result column="relaseUser" property="relaseuser" jdbcType="INTEGER" />
		<result column="claimUser" property="claimuser" jdbcType="INTEGER" />
		<result column="sendTime" property="sendtime" jdbcType="VARCHAR" />
		<result column="state" property="state" jdbcType="INTEGER" />
		<result column="updateTime" property="updatetime" jdbcType="VARCHAR" />
		<result column="extra" property="extra" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, content, relaseUser, claimUser, sendTime, state, updateTime, extra
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from message
		where id = #{id,jdbcType=INTEGER}
	</select>

	<select id="getMessage" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from message
		where claimUser = #{userId,jdbcType=INTEGER}
		<if test="type==1">
		  and relaseUser=-1
		</if>
		<if test="type==1">
		  and relaseUser!= -1
		</if>
		order by updateTime
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from message
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="army.db.pojo.Message">
		insert into message (id, content, relaseUser,
		claimUser, sendTime, state,
		updateTime, extra)
		values (#{id,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR},
		#{relaseuser,jdbcType=INTEGER},
		#{claimuser,jdbcType=INTEGER}, #{sendtime,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER},
		#{updatetime,jdbcType=VARCHAR}, #{extra,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="army.db.pojo.Message">
		insert into message
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="content != null">
				content,
			</if>
			<if test="relaseuser != null">
				relaseUser,
			</if>
			<if test="claimuser != null">
				claimUser,
			</if>
			<if test="sendtime != null">
				sendTime,
			</if>
			<if test="state != null">
				state,
			</if>
			<if test="updatetime != null">
				updateTime,
			</if>
			<if test="extra != null">
				extra,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="content != null">
				#{content,jdbcType=VARCHAR},
			</if>
			<if test="relaseuser != null">
				#{relaseuser,jdbcType=INTEGER},
			</if>
			<if test="claimuser != null">
				#{claimuser,jdbcType=INTEGER},
			</if>
			<if test="sendtime != null">
				#{sendtime,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				#{state,jdbcType=INTEGER},
			</if>
			<if test="updatetime != null">
				#{updatetime,jdbcType=VARCHAR},
			</if>
			<if test="extra != null">
				#{extra,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="army.db.pojo.Message">
		update message
		<set>
			<if test="content != null">
				content = #{content,jdbcType=VARCHAR},
			</if>
			<if test="relaseuser != null">
				relaseUser = #{relaseuser,jdbcType=INTEGER},
			</if>
			<if test="claimuser != null">
				claimUser = #{claimuser,jdbcType=INTEGER},
			</if>
			<if test="sendtime != null">
				sendTime = #{sendtime,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=INTEGER},
			</if>
			<if test="updatetime != null">
				updateTime = #{updatetime,jdbcType=VARCHAR},
			</if>
			<if test="extra != null">
				extra = #{extra,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="army.db.pojo.Message">
		update message
		set content = #{content,jdbcType=VARCHAR},
		relaseUser = #{relaseuser,jdbcType=INTEGER},
		claimUser = #{claimuser,jdbcType=INTEGER},
		sendTime = #{sendtime,jdbcType=VARCHAR},
		state = #{state,jdbcType=INTEGER},
		updateTime = #{updatetime,jdbcType=VARCHAR},
		extra = #{extra,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>