<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="army.db.dao.MessageMapper" >
  <resultMap id="BaseResultMap" type="army.db.pojo.Message" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="relase" property="relase" jdbcType="VARCHAR" />
    <result column="claim" property="claim" jdbcType="VARCHAR" />
    <result column="sendTime" property="sendtime" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="updateTime" property="updatetime" jdbcType="VARCHAR" />
    <result column="extra" property="extra" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, content, relase, claim, sendTime, state, updateTime, extra
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from message
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from message
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="army.db.pojo.Message" >
    insert into message (id, content, relase, 
      claim, sendTime, state, 
      updateTime, extra)
    values (#{id,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{relase,jdbcType=VARCHAR}, 
      #{claim,jdbcType=VARCHAR}, #{sendtime,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, 
      #{updatetime,jdbcType=VARCHAR}, #{extra,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="army.db.pojo.Message" >
    insert into message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="relase != null" >
        relase,
      </if>
      <if test="claim != null" >
        claim,
      </if>
      <if test="sendtime != null" >
        sendTime,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="updatetime != null" >
        updateTime,
      </if>
      <if test="extra != null" >
        extra,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="relase != null" >
        #{relase,jdbcType=VARCHAR},
      </if>
      <if test="claim != null" >
        #{claim,jdbcType=VARCHAR},
      </if>
      <if test="sendtime != null" >
        #{sendtime,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=VARCHAR},
      </if>
      <if test="extra != null" >
        #{extra,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="army.db.pojo.Message" >
    update message
    <set >
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="relase != null" >
        relase = #{relase,jdbcType=VARCHAR},
      </if>
      <if test="claim != null" >
        claim = #{claim,jdbcType=VARCHAR},
      </if>
      <if test="sendtime != null" >
        sendTime = #{sendtime,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null" >
        updateTime = #{updatetime,jdbcType=VARCHAR},
      </if>
      <if test="extra != null" >
        extra = #{extra,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="army.db.pojo.Message" >
    update message
    set content = #{content,jdbcType=VARCHAR},
      relase = #{relase,jdbcType=VARCHAR},
      claim = #{claim,jdbcType=VARCHAR},
      sendTime = #{sendtime,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      updateTime = #{updatetime,jdbcType=VARCHAR},
      extra = #{extra,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>